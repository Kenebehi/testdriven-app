name: Echo Changed Files

on:
  push:
    branches: [ Kenebehi-workflow ]

jobs:
  echo-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get All Changed Files
        id: get-changed-files
        run: |
          message=$(git diff --name-only -r HEAD^1 HEAD )
          message=$(echo $message | tr '\n' ' ')
          echo "EDITED_FILES=$message" >> "$GITHUB_OUTPUT"

      - name: Get All Deleted Files
        id: get-deleted-files
        run: |
          message=$(git diff --diff-filter=D --name-only HEAD^ HEAD )
          message=$(echo $message | tr '\n' ' ')
          echo "DELETED_FILES=$message" >> "$GITHUB_OUTPUT"

      - name: Get All Renamed Files
        id: get-renamed-files
        run: |
          message=$(git diff --name-status HEAD^1 HEAD | grep -E '^R' | awk '{print $2}')
          message=$(echo $message | tr '\n' ' ')
          echo "RENAMED_FILES=$message" >> "$GITHUB_OUTPUT"

      - name: Get All Updated DAGS
        id: get-changed-dags
        run: |
          echo "The selected files is ${{ steps.get-changed-files.outputs.EDITED_FILES }}"
          echo "The deleted files is ${{ steps.get-deleted-files.outputs.DELETED_FILES }}"
          EDITED_FILES_LIST="${{ steps.get-changed-files.outputs.EDITED_FILES }}"
          FILES="$(echo $EDITED_FILES_LIST | tr ' ' '\n' | grep "airflow/dags/.*\.py" | awk -F/ '{print $NF}' | tr '\n' ' ')"
          echo "$FILES"
          
          INCLUDES=""
          for file in $FILES; do
              INCLUDES="$INCLUDES --include $file"
          done
          echo "$INCLUDES"
          echo "INCLUDED_DAGS=$INCLUDES" >> "$GITHUB_OUTPUT"
          

      - name: Get Deleted Or Renamed DAGS
        id: get-deleted-renamed-dags
        env:
          S3_AIRFLOW_DIR: s3://product-analytics-pipelines/airflow
        run: |
          DELETED_RENAMED_FILES="$${{ steps.get-renamed-files.outputs.RENAMED_FILES }} $${{ steps.get-deleted-files.outputs.DELETED_FILES }}"
          FILES="$(echo $DELETED_RENAMED_FILES | tr ' ' '\n' | grep "airflow/dags/.*\.py" | awk -F/ '{print $NF}' | tr '\n' ' ')"
          echo "this is my expected output $FILES"
          echo "$DELETED_RENAMED_FILES"
          
#          EXCLUDES=""
#          for file in $FILES; do
#              EXCLUDES="$EXCLUDES $S3_AIRFLOW_DIR/$file"
#          done
#          echo "$EXCLUDES"
#          echo "$EXCLUDED_DAGS=$EXCLUDES" >> "$GITHUB_OUTPUT"

#      - name: Sync DAGS
#        run: |
#          if: ${{ steps.get-changed-dags.outputs.EXCLUDED_DAGS != '' }}
#            echo "aws s3 rm ${{ steps.get-deleted-renamed-dags.outputs.EXCLUDED_DAGS }}"
#          fi
#
#          if: ${{ steps.get-changed-dags.outputs.INCLUDED_DAGS != '' }}
#            echo "aws s3 sync ./airflow/dags/ s3://mesh-pa-consumer-private/kenneth_odumah/dags/ ${{ steps.get-changed-dags.outputs.INCLUDED_DAGS }}"
#          fi
          
        
                    



      #     aws s3 sync ./workers s3://your-bucket-name --exclude "*" $INCLUDES


# name: Sync Changed Files with AWS S3

# on:
#   push:
#     branches: [abranch]

# jobs:
#   sync-files:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v2

#       - name: Get Changed Files
#         id: get-changed-files
#         run: |
#           echo "EDITED_FILES=$(git diff --name-only -r HEAD^1 HEAD)" >> "$GITHUB_ENV"
#           echo "DELETED_FILES=$(git diff --diff-filter=D --name-only HEAD^ HEAD)" >> "$GITHUB_ENV"

#       - name: Sync Updated Files
#         if: ${{ steps.get-changed-files.outputs.EDITED_FILES != '' }}
#         run: |
#           FILES="$(echo ${{ steps.get-changed-files.outputs.EDITED_FILES }} | tr ' ' '\n' | grep "services/.*\.py" | awk -F/ '{print $NF}')"
#           echo "Syncing updated files: $FILES"
#           aws s3 sync ./workers s3://your-bucket/workers/ --exclude "*" ${FILES[@]/#/--include }

#       - name: Delete Removed Files
#         if: ${{ steps.get-changed-files.outputs.DELETED_FILES != '' }}
#         run: |
#           FILES="$(echo ${{ steps.get-changed-files.outputs.DELETED_FILES }} | tr ' ' '\n' | grep "services/.*\.py" | awk -F/ '{print $NF}')"
#           echo "Deleting removed files: $FILES"
#           aws s3 rm s3://your-bucket/workers/ ${FILES[@]/#/--exclude } --recursive


# name: Echo Changed Files

# on:
#   push:
#     branches: [abranch]

# jobs:
#   echo-files:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Get Changed Files
#         id: get-changed-files
#         run: |
#           git diff --name-only -r HEAD^1 HEAD > edited_files.txt
#           echo "EDITED_FILES=$(cat edited_files.txt | tr '\n' ' ')" >> "$GITHUB_ENV"

#       - name: Get Deleted Files
#         id: get-deleted-files
#         run: |
#           git diff --diff-filter=D --name-only HEAD^ HEAD > deleted_files.txt
#           echo "DELETED_FILES=$(cat deleted_files.txt | tr '\n' ' ')" >> "$GITHUB_ENV"

#       - name: Get Files
#         run: |
#           edited_files=($EDITED_FILES)
#           deleted_files=($DELETED_FILES)

#           # Filter files by folder
#           FILES=$(printf '%s\n' "${edited_files[@]}" "${deleted_files[@]}" | grep -E '^(dags|tests)/.*\.py$' | awk -F/ '{print $NF}' | tr '\n' ' ')
#           echo "The selected files are: $FILES"

#           INCLUDES=""
#           for path in $FILES; do
#             INCLUDES+=" --include $path"
#           done
#           echo "INCLUDES=$INCLUDES" >> "$GITHUB_ENV"