name: Echo Changed Files

on:
  push:
    branches: [ Kenebehi-workflow ]

# jobs:
#   echo-files:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Get changed files in the dags folder
#         id: tests
#         run: |
#           git diff --name-only -r HEAD^1 HEAD

#       - name: Run step if any file(s) in the dags folder change
#         run: |
#           echo "One or more files in the docs folder has changed."
#           echo "List all the files that have changed: ${{ steps.tests.outputs.stdout }}"


# jobs:
#   changedfiles:
#     runs-on: ubuntu-latest
#     # Map a step output to a job output
#     outputs:
#       all: ${{ steps.changes.outputs.all}}
#       ts: ${{ steps.changes.outputs.ts }}
#     steps:
#         # Make sure we have some code to diff.
#       - name: Checkout repository
#         uses: actions/checkout@v2
#       - name: Get changed files
#         id: changes
#         # Set outputs using the command.
#         run: |
#           echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)"
#           echo "::set-output name=ts::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .ts$ | xargs)"

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"

